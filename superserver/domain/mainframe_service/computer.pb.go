// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: mainframe/computer.proto

package mainframe_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	common "superserver/domain/public/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComputerPowerStatus int32

const (
	ComputerPowerStatus_COMPUTER_POWER_UNKNOWN ComputerPowerStatus = 0 // 未知状态
	ComputerPowerStatus_COMPUTER_POWER_OFF     ComputerPowerStatus = 1 // 关机状态
	ComputerPowerStatus_COMPUTER_POWER_ON      ComputerPowerStatus = 2 // 开机状态
)

// Enum value maps for ComputerPowerStatus.
var (
	ComputerPowerStatus_name = map[int32]string{
		0: "COMPUTER_POWER_UNKNOWN",
		1: "COMPUTER_POWER_OFF",
		2: "COMPUTER_POWER_ON",
	}
	ComputerPowerStatus_value = map[string]int32{
		"COMPUTER_POWER_UNKNOWN": 0,
		"COMPUTER_POWER_OFF":     1,
		"COMPUTER_POWER_ON":      2,
	}
)

func (x ComputerPowerStatus) Enum() *ComputerPowerStatus {
	p := new(ComputerPowerStatus)
	*p = x
	return p
}

func (x ComputerPowerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputerPowerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_mainframe_computer_proto_enumTypes[0].Descriptor()
}

func (ComputerPowerStatus) Type() protoreflect.EnumType {
	return &file_mainframe_computer_proto_enumTypes[0]
}

func (x ComputerPowerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputerPowerStatus.Descriptor instead.
func (ComputerPowerStatus) EnumDescriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{0}
}

type ComputerAction int32

const (
	ComputerAction_COMPUTER_CLOSE  ComputerAction = 0 // 关机
	ComputerAction_COMPUTER_OPEN   ComputerAction = 1 // 开机
	ComputerAction_COMPUTER_DETECT ComputerAction = 2 // 探测
)

// Enum value maps for ComputerAction.
var (
	ComputerAction_name = map[int32]string{
		0: "COMPUTER_CLOSE",
		1: "COMPUTER_OPEN",
		2: "COMPUTER_DETECT",
	}
	ComputerAction_value = map[string]int32{
		"COMPUTER_CLOSE":  0,
		"COMPUTER_OPEN":   1,
		"COMPUTER_DETECT": 2,
	}
)

func (x ComputerAction) Enum() *ComputerAction {
	p := new(ComputerAction)
	*p = x
	return p
}

func (x ComputerAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputerAction) Descriptor() protoreflect.EnumDescriptor {
	return file_mainframe_computer_proto_enumTypes[1].Descriptor()
}

func (ComputerAction) Type() protoreflect.EnumType {
	return &file_mainframe_computer_proto_enumTypes[1]
}

func (x ComputerAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputerAction.Descriptor instead.
func (ComputerAction) EnumDescriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{1}
}

type Computer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username    string              `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password    string              `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	MacAddress  string              `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	LanHostname string              `protobuf:"bytes,6,opt,name=lan_hostname,json=lanHostname,proto3" json:"lan_hostname,omitempty"`
	WanHostname string              `protobuf:"bytes,7,opt,name=wan_hostname,json=wanHostname,proto3" json:"wan_hostname,omitempty"`
	PowerStatus ComputerPowerStatus `protobuf:"varint,8,opt,name=power_status,json=powerStatus,proto3,enum=mainframe_service.ComputerPowerStatus" json:"power_status,omitempty"`
	ScanTime    int64               `protobuf:"varint,9,opt,name=scan_time,json=scanTime,proto3" json:"scan_time,omitempty"`
	DeleteTime  int64               `protobuf:"varint,1001,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"` // 删除时间 时间戳：秒
	CreateTime  int64               `protobuf:"varint,1002,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间 时间戳：秒
	UpdateTime  int64               `protobuf:"varint,1003,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 最后更新时间 时间戳：秒
	Creator     int32               `protobuf:"varint,1004,opt,name=creator,proto3" json:"creator,omitempty"`                         // 创建人
	Updater     int32               `protobuf:"varint,1005,opt,name=updater,proto3" json:"updater,omitempty"`                         // 更新人
}

func (x *Computer) Reset() {
	*x = Computer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Computer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Computer) ProtoMessage() {}

func (x *Computer) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Computer.ProtoReflect.Descriptor instead.
func (*Computer) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{0}
}

func (x *Computer) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Computer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Computer) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Computer) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Computer) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Computer) GetLanHostname() string {
	if x != nil {
		return x.LanHostname
	}
	return ""
}

func (x *Computer) GetWanHostname() string {
	if x != nil {
		return x.WanHostname
	}
	return ""
}

func (x *Computer) GetPowerStatus() ComputerPowerStatus {
	if x != nil {
		return x.PowerStatus
	}
	return ComputerPowerStatus_COMPUTER_POWER_UNKNOWN
}

func (x *Computer) GetScanTime() int64 {
	if x != nil {
		return x.ScanTime
	}
	return 0
}

func (x *Computer) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *Computer) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Computer) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Computer) GetCreator() int32 {
	if x != nil {
		return x.Creator
	}
	return 0
}

func (x *Computer) GetUpdater() int32 {
	if x != nil {
		return x.Updater
	}
	return 0
}

type ComputerFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []int32               `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Names           []string              `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Usernames       []string              `protobuf:"bytes,3,rep,name=usernames,proto3" json:"usernames,omitempty"`
	Passwords       []string              `protobuf:"bytes,4,rep,name=passwords,proto3" json:"passwords,omitempty"`
	MacAddress      []string              `protobuf:"bytes,5,rep,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	LanHostnames    []string              `protobuf:"bytes,6,rep,name=lan_hostnames,json=lanHostnames,proto3" json:"lan_hostnames,omitempty"`
	WanHostnames    []string              `protobuf:"bytes,7,rep,name=wan_hostnames,json=wanHostnames,proto3" json:"wan_hostnames,omitempty"`
	PowerStates     []ComputerPowerStatus `protobuf:"varint,8,rep,packed,name=power_states,json=powerStates,proto3,enum=mainframe_service.ComputerPowerStatus" json:"power_states,omitempty"`
	ScanTimeRange   *common.BetweenInt64  `protobuf:"bytes,9,opt,name=scan_time_range,json=scanTimeRange,proto3" json:"scan_time_range,omitempty"`
	Keywords        *ComputerKeywords     `protobuf:"bytes,10,opt,name=keywords,proto3" json:"keywords,omitempty"`
	DeleteTimeRange *common.BetweenInt64  `protobuf:"bytes,101,opt,name=delete_time_range,json=deleteTimeRange,proto3" json:"delete_time_range,omitempty"`
	CreateTimeRange *common.BetweenInt64  `protobuf:"bytes,102,opt,name=create_time_range,json=createTimeRange,proto3" json:"create_time_range,omitempty"`
	UpdateTimeRange *common.BetweenInt64  `protobuf:"bytes,103,opt,name=update_time_range,json=updateTimeRange,proto3" json:"update_time_range,omitempty"`
	Creators        []int32               `protobuf:"varint,104,rep,packed,name=creators,proto3" json:"creators,omitempty"`
	Updaters        []int32               `protobuf:"varint,105,rep,packed,name=updaters,proto3" json:"updaters,omitempty"`
	Deleted         common.BooleanScope   `protobuf:"varint,500,opt,name=deleted,proto3,enum=public.BooleanScope" json:"deleted,omitempty"`
}

func (x *ComputerFilter) Reset() {
	*x = ComputerFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputerFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputerFilter) ProtoMessage() {}

func (x *ComputerFilter) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputerFilter.ProtoReflect.Descriptor instead.
func (*ComputerFilter) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{1}
}

func (x *ComputerFilter) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ComputerFilter) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ComputerFilter) GetUsernames() []string {
	if x != nil {
		return x.Usernames
	}
	return nil
}

func (x *ComputerFilter) GetPasswords() []string {
	if x != nil {
		return x.Passwords
	}
	return nil
}

func (x *ComputerFilter) GetMacAddress() []string {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

func (x *ComputerFilter) GetLanHostnames() []string {
	if x != nil {
		return x.LanHostnames
	}
	return nil
}

func (x *ComputerFilter) GetWanHostnames() []string {
	if x != nil {
		return x.WanHostnames
	}
	return nil
}

func (x *ComputerFilter) GetPowerStates() []ComputerPowerStatus {
	if x != nil {
		return x.PowerStates
	}
	return nil
}

func (x *ComputerFilter) GetScanTimeRange() *common.BetweenInt64 {
	if x != nil {
		return x.ScanTimeRange
	}
	return nil
}

func (x *ComputerFilter) GetKeywords() *ComputerKeywords {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *ComputerFilter) GetDeleteTimeRange() *common.BetweenInt64 {
	if x != nil {
		return x.DeleteTimeRange
	}
	return nil
}

func (x *ComputerFilter) GetCreateTimeRange() *common.BetweenInt64 {
	if x != nil {
		return x.CreateTimeRange
	}
	return nil
}

func (x *ComputerFilter) GetUpdateTimeRange() *common.BetweenInt64 {
	if x != nil {
		return x.UpdateTimeRange
	}
	return nil
}

func (x *ComputerFilter) GetCreators() []int32 {
	if x != nil {
		return x.Creators
	}
	return nil
}

func (x *ComputerFilter) GetUpdaters() []int32 {
	if x != nil {
		return x.Updaters
	}
	return nil
}

func (x *ComputerFilter) GetDeleted() common.BooleanScope {
	if x != nil {
		return x.Deleted
	}
	return common.BooleanScope(0)
}

type ComputerKeywords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword               string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	NameOrUname           string `protobuf:"bytes,2,opt,name=name_or_uname,json=nameOrUname,proto3" json:"name_or_uname,omitempty"`
	Hostname              string `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	NameOrUnameOrHostname string `protobuf:"bytes,4,opt,name=name_or_uname_or_hostname,json=nameOrUnameOrHostname,proto3" json:"name_or_uname_or_hostname,omitempty"`
}

func (x *ComputerKeywords) Reset() {
	*x = ComputerKeywords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputerKeywords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputerKeywords) ProtoMessage() {}

func (x *ComputerKeywords) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputerKeywords.ProtoReflect.Descriptor instead.
func (*ComputerKeywords) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{2}
}

func (x *ComputerKeywords) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ComputerKeywords) GetNameOrUname() string {
	if x != nil {
		return x.NameOrUname
	}
	return ""
}

func (x *ComputerKeywords) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ComputerKeywords) GetNameOrUnameOrHostname() string {
	if x != nil {
		return x.NameOrUnameOrHostname
	}
	return ""
}

type ListComputerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Pager  *common.Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Sorts  []*common.Sort  `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Filter *ComputerFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListComputerParams) Reset() {
	*x = ListComputerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComputerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComputerParams) ProtoMessage() {}

func (x *ListComputerParams) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComputerParams.ProtoReflect.Descriptor instead.
func (*ListComputerParams) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{3}
}

func (x *ListComputerParams) GetHeader() *common.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListComputerParams) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ListComputerParams) GetSorts() []*common.Sort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *ListComputerParams) GetFilter() *ComputerFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListComputerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.ReplyHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Pager  *common.Pager       `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Data   []*Computer         `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListComputerReply) Reset() {
	*x = ListComputerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComputerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComputerReply) ProtoMessage() {}

func (x *ListComputerReply) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComputerReply.ProtoReflect.Descriptor instead.
func (*ListComputerReply) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{4}
}

func (x *ListComputerReply) GetHeader() *common.ReplyHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListComputerReply) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ListComputerReply) GetData() []*Computer {
	if x != nil {
		return x.Data
	}
	return nil
}

type OperateComputerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *common.Header   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Operate common.Operation `protobuf:"varint,2,opt,name=operate,proto3,enum=public.Operation" json:"operate,omitempty"`
	Data    *Computer        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OperateComputerParams) Reset() {
	*x = OperateComputerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateComputerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateComputerParams) ProtoMessage() {}

func (x *OperateComputerParams) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateComputerParams.ProtoReflect.Descriptor instead.
func (*OperateComputerParams) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{5}
}

func (x *OperateComputerParams) GetHeader() *common.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *OperateComputerParams) GetOperate() common.Operation {
	if x != nil {
		return x.Operate
	}
	return common.Operation(0)
}

func (x *OperateComputerParams) GetData() *Computer {
	if x != nil {
		return x.Data
	}
	return nil
}

type OperateComputerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.ReplyHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   *Computer           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OperateComputerReply) Reset() {
	*x = OperateComputerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateComputerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateComputerReply) ProtoMessage() {}

func (x *OperateComputerReply) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateComputerReply.ProtoReflect.Descriptor instead.
func (*OperateComputerReply) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{6}
}

func (x *OperateComputerReply) GetHeader() *common.ReplyHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *OperateComputerReply) GetData() *Computer {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchOperateComputerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *common.Header   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Operate common.Operation `protobuf:"varint,2,opt,name=operate,proto3,enum=public.Operation" json:"operate,omitempty"`
	Data    []*Computer      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchOperateComputerParams) Reset() {
	*x = BatchOperateComputerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchOperateComputerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperateComputerParams) ProtoMessage() {}

func (x *BatchOperateComputerParams) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperateComputerParams.ProtoReflect.Descriptor instead.
func (*BatchOperateComputerParams) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{7}
}

func (x *BatchOperateComputerParams) GetHeader() *common.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BatchOperateComputerParams) GetOperate() common.Operation {
	if x != nil {
		return x.Operate
	}
	return common.Operation(0)
}

func (x *BatchOperateComputerParams) GetData() []*Computer {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchOperateComputerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.ReplyHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *BatchOperateComputerReply) Reset() {
	*x = BatchOperateComputerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchOperateComputerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperateComputerReply) ProtoMessage() {}

func (x *BatchOperateComputerReply) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperateComputerReply.ProtoReflect.Descriptor instead.
func (*BatchOperateComputerReply) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{8}
}

func (x *BatchOperateComputerReply) GetHeader() *common.ReplyHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type DealComputerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Action ComputerAction `protobuf:"varint,2,opt,name=action,proto3,enum=mainframe_service.ComputerAction" json:"action,omitempty"`
	Id     int32          `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DealComputerParams) Reset() {
	*x = DealComputerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealComputerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealComputerParams) ProtoMessage() {}

func (x *DealComputerParams) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealComputerParams.ProtoReflect.Descriptor instead.
func (*DealComputerParams) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{9}
}

func (x *DealComputerParams) GetHeader() *common.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DealComputerParams) GetAction() ComputerAction {
	if x != nil {
		return x.Action
	}
	return ComputerAction_COMPUTER_CLOSE
}

func (x *DealComputerParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DealComputerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.ReplyHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *DealComputerReply) Reset() {
	*x = DealComputerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mainframe_computer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealComputerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealComputerReply) ProtoMessage() {}

func (x *DealComputerReply) ProtoReflect() protoreflect.Message {
	mi := &file_mainframe_computer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealComputerReply.ProtoReflect.Descriptor instead.
func (*DealComputerReply) Descriptor() ([]byte, []int) {
	return file_mainframe_computer_proto_rawDescGZIP(), []int{10}
}

func (x *DealComputerReply) GetHeader() *common.ReplyHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

var File_mainframe_computer_proto protoreflect.FileDescriptor

var file_mainframe_computer_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x61, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6d, 0x61, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x13, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd1, 0x03, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x61, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x61, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xeb, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0xec, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x22, 0xd8, 0x05, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x61, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x3f, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x40, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65,
	0x65, 0x6e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x68, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x69, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0xf4, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x55,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x19, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x55, 0x6e, 0x61, 0x6d, 0x65,
	0x4f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x96, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x74, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x01, 0x0a,
	0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x48, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x12,
	0x44, 0x65, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x11, 0x44, 0x65, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2a, 0x60, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f,
	0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x46,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x50,
	0x4f, 0x57, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x4c, 0x0a, 0x0e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x44,
	0x45, 0x54, 0x45, 0x43, 0x54, 0x10, 0x02, 0x42, 0x26, 0x5a, 0x24, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mainframe_computer_proto_rawDescOnce sync.Once
	file_mainframe_computer_proto_rawDescData = file_mainframe_computer_proto_rawDesc
)

func file_mainframe_computer_proto_rawDescGZIP() []byte {
	file_mainframe_computer_proto_rawDescOnce.Do(func() {
		file_mainframe_computer_proto_rawDescData = protoimpl.X.CompressGZIP(file_mainframe_computer_proto_rawDescData)
	})
	return file_mainframe_computer_proto_rawDescData
}

var file_mainframe_computer_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mainframe_computer_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_mainframe_computer_proto_goTypes = []interface{}{
	(ComputerPowerStatus)(0),           // 0: mainframe_service.ComputerPowerStatus
	(ComputerAction)(0),                // 1: mainframe_service.ComputerAction
	(*Computer)(nil),                   // 2: mainframe_service.Computer
	(*ComputerFilter)(nil),             // 3: mainframe_service.ComputerFilter
	(*ComputerKeywords)(nil),           // 4: mainframe_service.ComputerKeywords
	(*ListComputerParams)(nil),         // 5: mainframe_service.ListComputerParams
	(*ListComputerReply)(nil),          // 6: mainframe_service.ListComputerReply
	(*OperateComputerParams)(nil),      // 7: mainframe_service.OperateComputerParams
	(*OperateComputerReply)(nil),       // 8: mainframe_service.OperateComputerReply
	(*BatchOperateComputerParams)(nil), // 9: mainframe_service.BatchOperateComputerParams
	(*BatchOperateComputerReply)(nil),  // 10: mainframe_service.BatchOperateComputerReply
	(*DealComputerParams)(nil),         // 11: mainframe_service.DealComputerParams
	(*DealComputerReply)(nil),          // 12: mainframe_service.DealComputerReply
	(*common.BetweenInt64)(nil),        // 13: public.BetweenInt64
	(common.BooleanScope)(0),           // 14: public.BooleanScope
	(*common.Header)(nil),              // 15: public.Header
	(*common.Pager)(nil),               // 16: public.Pager
	(*common.Sort)(nil),                // 17: public.Sort
	(*common.ReplyHeader)(nil),         // 18: public.ReplyHeader
	(common.Operation)(0),              // 19: public.Operation
}
var file_mainframe_computer_proto_depIdxs = []int32{
	0,  // 0: mainframe_service.Computer.power_status:type_name -> mainframe_service.ComputerPowerStatus
	0,  // 1: mainframe_service.ComputerFilter.power_states:type_name -> mainframe_service.ComputerPowerStatus
	13, // 2: mainframe_service.ComputerFilter.scan_time_range:type_name -> public.BetweenInt64
	4,  // 3: mainframe_service.ComputerFilter.keywords:type_name -> mainframe_service.ComputerKeywords
	13, // 4: mainframe_service.ComputerFilter.delete_time_range:type_name -> public.BetweenInt64
	13, // 5: mainframe_service.ComputerFilter.create_time_range:type_name -> public.BetweenInt64
	13, // 6: mainframe_service.ComputerFilter.update_time_range:type_name -> public.BetweenInt64
	14, // 7: mainframe_service.ComputerFilter.deleted:type_name -> public.BooleanScope
	15, // 8: mainframe_service.ListComputerParams.header:type_name -> public.Header
	16, // 9: mainframe_service.ListComputerParams.pager:type_name -> public.Pager
	17, // 10: mainframe_service.ListComputerParams.sorts:type_name -> public.Sort
	3,  // 11: mainframe_service.ListComputerParams.filter:type_name -> mainframe_service.ComputerFilter
	18, // 12: mainframe_service.ListComputerReply.header:type_name -> public.ReplyHeader
	16, // 13: mainframe_service.ListComputerReply.pager:type_name -> public.Pager
	2,  // 14: mainframe_service.ListComputerReply.data:type_name -> mainframe_service.Computer
	15, // 15: mainframe_service.OperateComputerParams.header:type_name -> public.Header
	19, // 16: mainframe_service.OperateComputerParams.operate:type_name -> public.Operation
	2,  // 17: mainframe_service.OperateComputerParams.data:type_name -> mainframe_service.Computer
	18, // 18: mainframe_service.OperateComputerReply.header:type_name -> public.ReplyHeader
	2,  // 19: mainframe_service.OperateComputerReply.data:type_name -> mainframe_service.Computer
	15, // 20: mainframe_service.BatchOperateComputerParams.header:type_name -> public.Header
	19, // 21: mainframe_service.BatchOperateComputerParams.operate:type_name -> public.Operation
	2,  // 22: mainframe_service.BatchOperateComputerParams.data:type_name -> mainframe_service.Computer
	18, // 23: mainframe_service.BatchOperateComputerReply.header:type_name -> public.ReplyHeader
	15, // 24: mainframe_service.DealComputerParams.header:type_name -> public.Header
	1,  // 25: mainframe_service.DealComputerParams.action:type_name -> mainframe_service.ComputerAction
	18, // 26: mainframe_service.DealComputerReply.header:type_name -> public.ReplyHeader
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_mainframe_computer_proto_init() }
func file_mainframe_computer_proto_init() {
	if File_mainframe_computer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mainframe_computer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Computer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputerFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputerKeywords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComputerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComputerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateComputerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateComputerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchOperateComputerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchOperateComputerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealComputerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mainframe_computer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealComputerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mainframe_computer_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mainframe_computer_proto_goTypes,
		DependencyIndexes: file_mainframe_computer_proto_depIdxs,
		EnumInfos:         file_mainframe_computer_proto_enumTypes,
		MessageInfos:      file_mainframe_computer_proto_msgTypes,
	}.Build()
	File_mainframe_computer_proto = out.File
	file_mainframe_computer_proto_rawDesc = nil
	file_mainframe_computer_proto_goTypes = nil
	file_mainframe_computer_proto_depIdxs = nil
}

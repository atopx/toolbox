// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: novel/chapter.proto

package novel_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	common "superserver/domain/public/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BookId     int32             `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Code       int32             `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Src        string            `protobuf:"bytes,4,opt,name=src,proto3" json:"src,omitempty"`
	Title      string            `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Content    string            `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	State      common.TaskStatus `protobuf:"varint,7,opt,name=state,proto3,enum=public.TaskStatus" json:"state,omitempty"`
	DeleteTime int64             `protobuf:"varint,1001,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"` // 删除时间 时间戳：秒
	CreateTime int64             `protobuf:"varint,1002,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间 时间戳：秒
	UpdateTime int64             `protobuf:"varint,1003,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 最后更新时间 时间戳：秒
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novel_chapter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_novel_chapter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_novel_chapter_proto_rawDescGZIP(), []int{0}
}

func (x *Chapter) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Chapter) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *Chapter) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Chapter) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *Chapter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chapter) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Chapter) GetState() common.TaskStatus {
	if x != nil {
		return x.State
	}
	return common.TaskStatus(0)
}

func (x *Chapter) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *Chapter) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Chapter) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type ChapterFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []int32                 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	BookIds         []int32                 `protobuf:"varint,2,rep,packed,name=book_ids,json=bookIds,proto3" json:"book_ids,omitempty"`
	Srcs            []string                `protobuf:"bytes,3,rep,name=srcs,proto3" json:"srcs,omitempty"`
	States          []common.TaskStatus     `protobuf:"varint,4,rep,packed,name=states,proto3,enum=public.TaskStatus" json:"states,omitempty"`
	DeleteTimeRange *common.BetweenInt64    `protobuf:"bytes,101,opt,name=delete_time_range,json=deleteTimeRange,proto3" json:"delete_time_range,omitempty"`
	CreateTimeRange *common.BetweenInt64    `protobuf:"bytes,102,opt,name=create_time_range,json=createTimeRange,proto3" json:"create_time_range,omitempty"`
	UpdateTimeRange *common.BetweenInt64    `protobuf:"bytes,103,opt,name=update_time_range,json=updateTimeRange,proto3" json:"update_time_range,omitempty"`
	Deleted         common.BooleanScope     `protobuf:"varint,500,opt,name=deleted,proto3,enum=public.BooleanScope" json:"deleted,omitempty"`
	Keywords        *ChapterFilter_Keywords `protobuf:"bytes,201,opt,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *ChapterFilter) Reset() {
	*x = ChapterFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novel_chapter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterFilter) ProtoMessage() {}

func (x *ChapterFilter) ProtoReflect() protoreflect.Message {
	mi := &file_novel_chapter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterFilter.ProtoReflect.Descriptor instead.
func (*ChapterFilter) Descriptor() ([]byte, []int) {
	return file_novel_chapter_proto_rawDescGZIP(), []int{1}
}

func (x *ChapterFilter) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ChapterFilter) GetBookIds() []int32 {
	if x != nil {
		return x.BookIds
	}
	return nil
}

func (x *ChapterFilter) GetSrcs() []string {
	if x != nil {
		return x.Srcs
	}
	return nil
}

func (x *ChapterFilter) GetStates() []common.TaskStatus {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ChapterFilter) GetDeleteTimeRange() *common.BetweenInt64 {
	if x != nil {
		return x.DeleteTimeRange
	}
	return nil
}

func (x *ChapterFilter) GetCreateTimeRange() *common.BetweenInt64 {
	if x != nil {
		return x.CreateTimeRange
	}
	return nil
}

func (x *ChapterFilter) GetUpdateTimeRange() *common.BetweenInt64 {
	if x != nil {
		return x.UpdateTimeRange
	}
	return nil
}

func (x *ChapterFilter) GetDeleted() common.BooleanScope {
	if x != nil {
		return x.Deleted
	}
	return common.BooleanScope(0)
}

func (x *ChapterFilter) GetKeywords() *ChapterFilter_Keywords {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type ListChapterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Pager  *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Sorts  []*common.Sort `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Filter *ChapterFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListChapterParams) Reset() {
	*x = ListChapterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novel_chapter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChapterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChapterParams) ProtoMessage() {}

func (x *ListChapterParams) ProtoReflect() protoreflect.Message {
	mi := &file_novel_chapter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChapterParams.ProtoReflect.Descriptor instead.
func (*ListChapterParams) Descriptor() ([]byte, []int) {
	return file_novel_chapter_proto_rawDescGZIP(), []int{2}
}

func (x *ListChapterParams) GetHeader() *common.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListChapterParams) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ListChapterParams) GetSorts() []*common.Sort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *ListChapterParams) GetFilter() *ChapterFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListChapterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *common.ReplyHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Pager  *common.Pager       `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Data   []*Chapter          `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListChapterReply) Reset() {
	*x = ListChapterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novel_chapter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChapterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChapterReply) ProtoMessage() {}

func (x *ListChapterReply) ProtoReflect() protoreflect.Message {
	mi := &file_novel_chapter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChapterReply.ProtoReflect.Descriptor instead.
func (*ListChapterReply) Descriptor() ([]byte, []int) {
	return file_novel_chapter_proto_rawDescGZIP(), []int{3}
}

func (x *ListChapterReply) GetHeader() *common.ReplyHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListChapterReply) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ListChapterReply) GetData() []*Chapter {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChapterFilter_Keywords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *ChapterFilter_Keywords) Reset() {
	*x = ChapterFilter_Keywords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novel_chapter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterFilter_Keywords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterFilter_Keywords) ProtoMessage() {}

func (x *ChapterFilter_Keywords) ProtoReflect() protoreflect.Message {
	mi := &file_novel_chapter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterFilter_Keywords.ProtoReflect.Descriptor instead.
func (*ChapterFilter_Keywords) Descriptor() ([]byte, []int) {
	return file_novel_chapter_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ChapterFilter_Keywords) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

var File_novel_chapter_proto protoreflect.FileDescriptor

var file_novel_chapter_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x07, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x72, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xe9, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0xea, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xdd, 0x03, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x72, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x72, 0x63, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65,
	0x6e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x6e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x08, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x24,
	0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x22, 0x5a, 0x20, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_novel_chapter_proto_rawDescOnce sync.Once
	file_novel_chapter_proto_rawDescData = file_novel_chapter_proto_rawDesc
)

func file_novel_chapter_proto_rawDescGZIP() []byte {
	file_novel_chapter_proto_rawDescOnce.Do(func() {
		file_novel_chapter_proto_rawDescData = protoimpl.X.CompressGZIP(file_novel_chapter_proto_rawDescData)
	})
	return file_novel_chapter_proto_rawDescData
}

var file_novel_chapter_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_novel_chapter_proto_goTypes = []interface{}{
	(*Chapter)(nil),                // 0: novel_service.Chapter
	(*ChapterFilter)(nil),          // 1: novel_service.ChapterFilter
	(*ListChapterParams)(nil),      // 2: novel_service.ListChapterParams
	(*ListChapterReply)(nil),       // 3: novel_service.ListChapterReply
	(*ChapterFilter_Keywords)(nil), // 4: novel_service.ChapterFilter.Keywords
	(common.TaskStatus)(0),         // 5: public.TaskStatus
	(*common.BetweenInt64)(nil),    // 6: public.BetweenInt64
	(common.BooleanScope)(0),       // 7: public.BooleanScope
	(*common.Header)(nil),          // 8: public.Header
	(*common.Pager)(nil),           // 9: public.Pager
	(*common.Sort)(nil),            // 10: public.Sort
	(*common.ReplyHeader)(nil),     // 11: public.ReplyHeader
}
var file_novel_chapter_proto_depIdxs = []int32{
	5,  // 0: novel_service.Chapter.state:type_name -> public.TaskStatus
	5,  // 1: novel_service.ChapterFilter.states:type_name -> public.TaskStatus
	6,  // 2: novel_service.ChapterFilter.delete_time_range:type_name -> public.BetweenInt64
	6,  // 3: novel_service.ChapterFilter.create_time_range:type_name -> public.BetweenInt64
	6,  // 4: novel_service.ChapterFilter.update_time_range:type_name -> public.BetweenInt64
	7,  // 5: novel_service.ChapterFilter.deleted:type_name -> public.BooleanScope
	4,  // 6: novel_service.ChapterFilter.keywords:type_name -> novel_service.ChapterFilter.Keywords
	8,  // 7: novel_service.ListChapterParams.header:type_name -> public.Header
	9,  // 8: novel_service.ListChapterParams.pager:type_name -> public.Pager
	10, // 9: novel_service.ListChapterParams.sorts:type_name -> public.Sort
	1,  // 10: novel_service.ListChapterParams.filter:type_name -> novel_service.ChapterFilter
	11, // 11: novel_service.ListChapterReply.header:type_name -> public.ReplyHeader
	9,  // 12: novel_service.ListChapterReply.pager:type_name -> public.Pager
	0,  // 13: novel_service.ListChapterReply.data:type_name -> novel_service.Chapter
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_novel_chapter_proto_init() }
func file_novel_chapter_proto_init() {
	if File_novel_chapter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_novel_chapter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novel_chapter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novel_chapter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChapterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novel_chapter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChapterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novel_chapter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterFilter_Keywords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_novel_chapter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_novel_chapter_proto_goTypes,
		DependencyIndexes: file_novel_chapter_proto_depIdxs,
		MessageInfos:      file_novel_chapter_proto_msgTypes,
	}.Build()
	File_novel_chapter_proto = out.File
	file_novel_chapter_proto_rawDesc = nil
	file_novel_chapter_proto_goTypes = nil
	file_novel_chapter_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: note/service.proto

package note_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_note_service_proto protoreflect.FileDescriptor

var file_note_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x0f, 0x6e, 0x6f, 0x74, 0x65, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x6f, 0x74, 0x65, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x6f, 0x74, 0x65, 0x2f, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xc9, 0x06, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d,
	0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x54, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x21,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x23, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x29, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x54, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x29,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x21, 0x5a, 0x1f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_note_service_proto_goTypes = []interface{}{
	(*ListNoteParams)(nil),              // 0: note_service.ListNoteParams
	(*OperateNoteParams)(nil),           // 1: note_service.OperateNoteParams
	(*BatchOperateNoteParams)(nil),      // 2: note_service.BatchOperateNoteParams
	(*ListNoteTopicParams)(nil),         // 3: note_service.ListNoteTopicParams
	(*OperateNoteTopicParams)(nil),      // 4: note_service.OperateNoteTopicParams
	(*BatchOperateNoteTopicParams)(nil), // 5: note_service.BatchOperateNoteTopicParams
	(*ListNoteLabelParams)(nil),         // 6: note_service.ListNoteLabelParams
	(*OperateNoteLabelParams)(nil),      // 7: note_service.OperateNoteLabelParams
	(*BatchOperateNoteLabelParams)(nil), // 8: note_service.BatchOperateNoteLabelParams
	(*ListNoteReply)(nil),               // 9: note_service.ListNoteReply
	(*OperateNoteReply)(nil),            // 10: note_service.OperateNoteReply
	(*BatchOperateNoteReply)(nil),       // 11: note_service.BatchOperateNoteReply
	(*ListNoteTopicReply)(nil),          // 12: note_service.ListNoteTopicReply
	(*OperateNoteTopicReply)(nil),       // 13: note_service.OperateNoteTopicReply
	(*BatchOperateNoteTopicReply)(nil),  // 14: note_service.BatchOperateNoteTopicReply
	(*ListNoteLabelReply)(nil),          // 15: note_service.ListNoteLabelReply
	(*OperateNoteLabelReply)(nil),       // 16: note_service.OperateNoteLabelReply
	(*BatchOperateNoteLabelReply)(nil),  // 17: note_service.BatchOperateNoteLabelReply
}
var file_note_service_proto_depIdxs = []int32{
	0,  // 0: note_service.NoteService.ListNote:input_type -> note_service.ListNoteParams
	1,  // 1: note_service.NoteService.OperateNote:input_type -> note_service.OperateNoteParams
	2,  // 2: note_service.NoteService.BatchOperateNote:input_type -> note_service.BatchOperateNoteParams
	3,  // 3: note_service.NoteService.ListNoteTopic:input_type -> note_service.ListNoteTopicParams
	4,  // 4: note_service.NoteService.OperateNoteTopic:input_type -> note_service.OperateNoteTopicParams
	5,  // 5: note_service.NoteService.BatchOperateNoteTopic:input_type -> note_service.BatchOperateNoteTopicParams
	6,  // 6: note_service.NoteService.ListNoteLabel:input_type -> note_service.ListNoteLabelParams
	7,  // 7: note_service.NoteService.OperateNoteLabel:input_type -> note_service.OperateNoteLabelParams
	8,  // 8: note_service.NoteService.BatchOperateNoteLabel:input_type -> note_service.BatchOperateNoteLabelParams
	9,  // 9: note_service.NoteService.ListNote:output_type -> note_service.ListNoteReply
	10, // 10: note_service.NoteService.OperateNote:output_type -> note_service.OperateNoteReply
	11, // 11: note_service.NoteService.BatchOperateNote:output_type -> note_service.BatchOperateNoteReply
	12, // 12: note_service.NoteService.ListNoteTopic:output_type -> note_service.ListNoteTopicReply
	13, // 13: note_service.NoteService.OperateNoteTopic:output_type -> note_service.OperateNoteTopicReply
	14, // 14: note_service.NoteService.BatchOperateNoteTopic:output_type -> note_service.BatchOperateNoteTopicReply
	15, // 15: note_service.NoteService.ListNoteLabel:output_type -> note_service.ListNoteLabelReply
	16, // 16: note_service.NoteService.OperateNoteLabel:output_type -> note_service.OperateNoteLabelReply
	17, // 17: note_service.NoteService.BatchOperateNoteLabel:output_type -> note_service.BatchOperateNoteLabelReply
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_note_service_proto_init() }
func file_note_service_proto_init() {
	if File_note_service_proto != nil {
		return
	}
	file_note_note_proto_init()
	file_note_label_proto_init()
	file_note_topic_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_note_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_note_service_proto_goTypes,
		DependencyIndexes: file_note_service_proto_depIdxs,
	}.Build()
	File_note_service_proto = out.File
	file_note_service_proto_rawDesc = nil
	file_note_service_proto_goTypes = nil
	file_note_service_proto_depIdxs = nil
}

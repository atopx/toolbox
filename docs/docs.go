// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "atopx",
            "url": "https://github.com/atopx/toolbox.git",
            "email": "3940422@qq.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ping",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/pixel/spec": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "计算显示器实际规格",
                "parameters": [
                    {
                        "type": "number",
                        "description": "分辨率: 高",
                        "name": "height_rate",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "显示器尺寸",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "分辨率: 宽",
                        "name": "width_rate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "调用成功",
                        "schema": {
                            "$ref": "#/definitions/spec.Reply"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/system.ReplyError"
                        }
                    },
                    "500": {
                        "description": "系统错误",
                        "schema": {
                            "$ref": "#/definitions/system.ReplyError"
                        }
                    }
                }
            }
        },
        "/v1/wechat": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "微信公众号token认证",
                "parameters": [
                    {
                        "type": "number",
                        "description": "分辨率: 高",
                        "name": "height_rate",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "显示器尺寸",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "分辨率: 宽",
                        "name": "width_rate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "调用成功",
                        "schema": {
                            "$ref": "#/definitions/spec.Reply"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/system.ReplyError"
                        }
                    },
                    "500": {
                        "description": "系统错误",
                        "schema": {
                            "$ref": "#/definitions/system.ReplyError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "text/xml"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "微信公众号消息监听",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/message_listen.Param"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "调用成功",
                        "schema": {
                            "$ref": "#/definitions/message_listen.Reply"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/system.ReplyError"
                        }
                    },
                    "500": {
                        "description": "系统错误",
                        "schema": {
                            "$ref": "#/definitions/system.ReplyError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "message_listen.Param": {
            "type": "object",
            "properties": {
                "Content": {
                    "description": "文本消息内容",
                    "type": "string"
                },
                "CreateTime": {
                    "description": "消息创建时间 （整型）",
                    "type": "integer"
                },
                "FromUserName": {
                    "description": "发送方帐号（一个OpenID）",
                    "type": "string"
                },
                "Idx": {
                    "description": "多图文时第几篇文章，从1开始（消息如果来自文章时才有）",
                    "type": "string"
                },
                "MsgDataId": {
                    "description": "消息的数据ID（消息如果来自文章时才有）",
                    "type": "string"
                },
                "MsgId": {
                    "description": "消息id，64位整型",
                    "type": "string"
                },
                "MsgType": {
                    "description": "消息类型，文本为text",
                    "type": "string"
                },
                "ToUserName": {
                    "description": "开发者微信号",
                    "type": "string"
                }
            }
        },
        "message_listen.Reply": {
            "type": "object",
            "properties": {
                "Content": {
                    "description": "文本消息内容",
                    "type": "string"
                },
                "CreateTime": {
                    "description": "消息创建时间 （整型）",
                    "type": "integer"
                },
                "FromUserName": {
                    "description": "发送方帐号（一个OpenID）",
                    "type": "string"
                },
                "Idx": {
                    "description": "多图文时第几篇文章，从1开始（消息如果来自文章时才有）",
                    "type": "string"
                },
                "MsgDataId": {
                    "description": "消息的数据ID（消息如果来自文章时才有）",
                    "type": "string"
                },
                "MsgId": {
                    "description": "消息id，64位整型",
                    "type": "string"
                },
                "MsgType": {
                    "description": "消息类型，文本为text",
                    "type": "string"
                },
                "ToUserName": {
                    "description": "开发者微信号",
                    "type": "string"
                }
            }
        },
        "pixel.Spec": {
            "type": "object",
            "properties": {
                "length_cm": {
                    "description": "长度(厘米)",
                    "type": "number"
                },
                "length_inch": {
                    "description": "长度(英尺)",
                    "type": "number"
                },
                "rate": {
                    "description": "分辨率",
                    "type": "number"
                }
            }
        },
        "spec.Reply": {
            "type": "object",
            "properties": {
                "height": {
                    "description": "宽数据",
                    "$ref": "#/definitions/pixel.Spec"
                },
                "ppi": {
                    "description": "显示PPI",
                    "type": "number"
                },
                "size": {
                    "description": "显示器尺寸",
                    "type": "number"
                },
                "width": {
                    "description": "高数据",
                    "$ref": "#/definitions/pixel.Spec"
                }
            }
        },
        "system.ReplyError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "message": {
                    "description": "异常消息",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "toolbox-api",
	Description:      "工具箱api",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

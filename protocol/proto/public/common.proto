syntax = "proto3";
package public;
option go_package = "superserver/domain/public/common";
import "public/ecode.proto";

enum RangeScope {
    RANGE_ALL = 0; // 含左右
    RANGE_LEFT = 1; // 含左
    RANGE_RIGHT = 2; // 含右
}

enum BooleanScope {
    BOOL_ALL = 0;
    BOOL_FALSE = 1;
    BOOL_TRUE = 2;
}

message Pager {
    uint64 index = 1; // 页码
    uint64 size = 2; // 数量
    uint64 count = 3; // 总数量
    bool disabled = 5; // 禁用分页
}

message RangeI64 {
    int64 left = 1; // 区间左
    int64 right = 2; // 区间右
    RangeScope scope = 3; // 应用范围
}

message Header {
    int64 trace_id = 1;
    string source = 2;
    int32 operator = 3;
}

message ReplyHeader {
    int64 trace_id = 1;
    public.ECode code = 2;
    string message = 3;
}

enum SortDirection {
    SORT_ASC = 0;
    SORT_DESC = 1;
}

message BetweenInt64 {
    RangeScope scope = 1;
    int64 left = 2;
    int64 right = 3;
}

message Sort {
    string field = 1;
    SortDirection direction = 2;
}

enum Operation {
    // 基础操作类型
    OPERATION_CREATE = 0;
    OPERATION_UPDATE = 1;
    OPERATION_DELETE = 2;
    OPERATION_REAL_DELETE = 3;

    // 高阶操作类型
    OPERATION_UPSERT = 101;
}

enum HttpMethod {
    GET = 0; // 方法请求一个指定资源的表示形式，使用 GET 的请求应该只被用于获取数据
    HEAD = 1; // 方法请求一个与 GET 请求的响应相同的响应，但没有响应体
    POST = 2; // 方法用于将实体提交到指定的资源，通常导致在服务器上的状态变化或副作用
    PUT = 3; // 方法用请求有效载荷替换目标资源的所有当前表示
    DELETE = 4; // 方法删除指定的资源
    CONNECT = 5; // 方法建立一个到由目标资源标识的服务器的隧道
    OPTION = 6; // 方法用于描述目标资源的通信选项
    PATCH = 7; // 方法用于对资源应用部分修改
    TRACE = 8; // 方法沿着到目标资源的路径执行一个消息环回测试
}

enum HttpProtocol {
    HTTP = 0; // http
    HTTPS = 1; // https
    GRPC = 2; // http/2.0
    WS = 3; // websocket
    WSS = 4;  // websockets
}

message HttpHeader {
    string key = 1;
    string value = 2;
}
